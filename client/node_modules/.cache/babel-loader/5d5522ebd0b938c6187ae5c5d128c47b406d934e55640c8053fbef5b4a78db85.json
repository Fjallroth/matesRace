{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/chris/Documents/Github/matesRace/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/chris/Documents/Github/matesRace/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/chris/Documents/Github/matesRace/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import Header from\"./components/Header\";import Tasks from\"./components/Tasks\";import{useState,useEffect}from\"react\";import RaceContainer from\"./components/RaceContainer\";import PlanRace from\"./components/PlanRace\";import AddRace from\"./components/AddRace\";import PrevRaceContainer from\"./components/PrevRaceContainer\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showPlanRace=_useState2[0],setshowPlanRace=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),showaddRace=_useState4[0],setshowaddRace=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),rides=_useState6[0],setRides=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),raceID=_useState8[0],setRaceID=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),races=_useState10[0],setTasks=_useState10[1];var _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),userId=_useState12[0],setUserId=_useState12[1];useEffect(function(){var getRaces=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var racesFromServer;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return fetchRace();case 2:racesFromServer=_context.sent;console.log(racesFromServer);setTasks(racesFromServer.races);setUserId(racesFromServer.user);case 6:case\"end\":return _context.stop();}},_callee);}));return function getRaces(){return _ref.apply(this,arguments);};}();getRaces();},[]);var updateRaces=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var racesFromServer;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetchRace();case 2:racesFromServer=_context2.sent;setTasks(racesFromServer.races);setUserId(racesFromServer.user);case 5:case\"end\":return _context2.stop();}},_callee2);}));return function updateRaces(){return _ref2.apply(this,arguments);};}();var _getLeaderboard=function getLeaderboard(race){if(!race||!race.participants||!race.segments){return[];// Return an empty array if the race object is undefined or doesn't have the required properties\n}var participants=race.participants;// Build an array of segment names\nvar segmentNames=race.segments.map(function(segment){return{name:segment};});// Add each participant's segment times to the array of segment names\nparticipants.forEach(function(participant){if(participant.segments){participant.segments.forEach(function(segment,index){var segmentName=segmentNames[index].name;segmentNames[index][participant.userName]=segment.segmentTime;});}});// Calculate each participant's total time and seconds off leader\nvar leaderboard=participants.map(function(participant){var totalTime=participant.segments?participant.segments.reduce(function(acc,segment){return acc+segment.segmentTime;},0):0;var secondsOffLeader=totalTime-(participants[0].segments?participants[0].segments.reduce(function(acc,segment){return acc+segment.segmentTime;},0):0);return{name:participant.userName,totalTime:totalTime,diffToLeader:secondsOffLeader,segments:segmentNames.map(function(segmentName){return{name:segmentName.name,time:segmentName[participant.userName]};})};});// Sort the leaderboard by total time\nleaderboard.sort(function(a,b){return a.totalTime-b.totalTime;});return leaderboard;};var fetchRace=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(){var res,data;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return fetch(\"/raceMates/races\");case 3:res=_context3.sent;if(res.ok){_context3.next=6;break;}throw new Error(res.statusText);case 6:_context3.next=8;return res.json();case 8:data=_context3.sent;return _context3.abrupt(\"return\",data);case 12:_context3.prev=12;_context3.t0=_context3[\"catch\"](0);console.error(\"Failed to fetch races:\",_context3.t0);return _context3.abrupt(\"return\",{races:[]});case 16:case\"end\":return _context3.stop();}},_callee3,null,[[0,12]]);}));return function fetchRace(){return _ref3.apply(this,arguments);};}();var planRace=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(race){var res;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:console.log(race);_context4.next=3;return fetch(\"/raceMates/planRace\",{method:\"POST\",headers:{\"Content-type\":\"application/json\"},body:JSON.stringify(race)});case 3:res=_context4.sent;_context4.next=6;return res.json();case 6:_context4.next=8;return updateRaces();case 8:case\"end\":return _context4.stop();}},_callee4);}));return function planRace(_x){return _ref4.apply(this,arguments);};}();var addRace=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(race){var res;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1)switch(_context5.prev=_context5.next){case 0:console.log(race);_context5.next=3;return fetch(\"/raceMates/joinRace\",{method:\"PUT\",headers:{\"Content-type\":\"application/json\"},body:JSON.stringify(race)});case 3:res=_context5.sent;_context5.next=6;return res.json();case 6:_context5.next=8;return updateRaces();case 8:case\"end\":return _context5.stop();}},_callee5);}));return function addRace(_x2){return _ref5.apply(this,arguments);};}();var fetchRide=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(race){var res,data,displayData;return _regeneratorRuntime().wrap(function _callee6$(_context6){while(1)switch(_context6.prev=_context6.next){case 0:console.log(race);console.log(race._id);_context6.next=4;return fetch(\"/raceMates/selectRide\",{method:\"POST\",headers:{\"Content-type\":\"application/json\"},body:JSON.stringify(race)});case 4:res=_context6.sent;_context6.next=7;return res.json();case 7:data=_context6.sent;displayData=data.rides.map(function(e){return{name:e.name,segments:e.matchingSegments,raceId:race._id};});console.log(displayData);setRides(displayData);setRaceID(race._id);case 12:case\"end\":return _context6.stop();}},_callee6);}));return function fetchRide(_x3){return _ref6.apply(this,arguments);};}();var selectRide=/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(ride){var res;return _regeneratorRuntime().wrap(function _callee7$(_context7){while(1)switch(_context7.prev=_context7.next){case 0:console.log(ride);_context7.next=3;return fetch(\"/raceMates/submitRide\",{method:\"PUT\",headers:{\"Content-type\":\"application/json\"},body:JSON.stringify(ride)});case 3:res=_context7.sent;case 4:case\"end\":return _context7.stop();}},_callee7);}));return function selectRide(_x4){return _ref7.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col w-full min-h-screen bg-gray-400 rounded-md\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\" z-10 py-2 bg-white shadow-md container my-5 mx-auto px-4 sm:px-6 lg:px-8 text-purple-600 dark:text-purple-300 rounded-md\",children:[/*#__PURE__*/_jsx(Header,{class:\"rounded-md flex align-end px-10\",buttonTitle:\"Plan a race\",title:\"Welcome to mates race\",onAdd:function onAdd(){return setshowPlanRace(!showPlanRace);},showAdd:showPlanRace}),showPlanRace&&/*#__PURE__*/_jsx(PlanRace,{onAdd:planRace})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"rounded-md z-5 py-5 bg-white shadow-md container mx-auto px-4 sm:px-6 lg:px-8 flex flex-col items-center h-full text-purple-600 dark:text-purple-300 my-2\",children:[/*#__PURE__*/_jsx(RaceContainer,{title:\"Your upcoming races\",buttonTitle:\"Join a race\",onAdd:function onAdd(){return setshowaddRace(!showaddRace);},showAdd:showaddRace}),showaddRace&&/*#__PURE__*/_jsx(AddRace,{onAdd:addRace}),/*#__PURE__*/_jsx(\"div\",{className:\"py-10 w-full\",children:races.length>0?/*#__PURE__*/_jsx(Tasks,{races:races,rides:rides,raceID:raceID,fetchRide:fetchRide,selectRide:selectRide,getLeaderboard:function getLeaderboard(race){return _getLeaderboard(race);},userId:userId}):\"You have no upcoming races\"}),/*#__PURE__*/_jsx(\"div\",{id:\"ride-details\"})]})]});};export default App;","map":{"version":3,"names":["Header","Tasks","useState","useEffect","RaceContainer","PlanRace","AddRace","PrevRaceContainer","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","showPlanRace","setshowPlanRace","_useState3","_useState4","showaddRace","setshowaddRace","_useState5","_useState6","rides","setRides","_useState7","_useState8","raceID","setRaceID","_useState9","_useState10","races","setTasks","_useState11","_useState12","userId","setUserId","getRaces","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","racesFromServer","wrap","_callee$","_context","prev","next","fetchRace","sent","console","log","user","stop","apply","arguments","updateRaces","_ref2","_callee2","_callee2$","_context2","getLeaderboard","race","participants","segments","segmentNames","map","segment","name","forEach","participant","index","segmentName","userName","segmentTime","leaderboard","totalTime","reduce","acc","secondsOffLeader","diffToLeader","time","sort","a","b","_ref3","_callee3","res","data","_callee3$","_context3","fetch","ok","Error","statusText","json","abrupt","t0","error","planRace","_ref4","_callee4","_callee4$","_context4","method","headers","body","JSON","stringify","_x","addRace","_ref5","_callee5","_callee5$","_context5","_x2","fetchRide","_ref6","_callee6","displayData","_callee6$","_context6","_id","e","matchingSegments","raceId","_x3","selectRide","_ref7","_callee7","ride","_callee7$","_context7","_x4","className","children","class","buttonTitle","title","onAdd","showAdd","length","id"],"sources":["C:/Users/chris/Documents/Github/matesRace/client/src/App.js"],"sourcesContent":["import Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport { useState, useEffect } from \"react\";\nimport RaceContainer from \"./components/RaceContainer\";\nimport PlanRace from \"./components/PlanRace\";\nimport AddRace from \"./components/AddRace\";\nimport PrevRaceContainer from \"./components/PrevRaceContainer\";\n\nconst App = () => {\n  const [showPlanRace, setshowPlanRace] = useState(false);\n  const [showaddRace, setshowaddRace] = useState(false);\n  const [rides, setRides] = useState([]);\n  const [raceID, setRaceID] = useState([]);\n  const [races, setTasks] = useState([]);\n  const [userId, setUserId] = useState(\"\");\n  useEffect(() => {\n    const getRaces = async () => {\n      const racesFromServer = await fetchRace();\n      console.log(racesFromServer);\n      setTasks(racesFromServer.races);\n      setUserId(racesFromServer.user);\n    };\n    getRaces();\n  }, []);\n\n  const updateRaces = async () => {\n    const racesFromServer = await fetchRace();\n    setTasks(racesFromServer.races);\n    setUserId(racesFromServer.user);\n  };\n\n  const getLeaderboard = (race) => {\n    if (!race || !race.participants || !race.segments) {\n      return []; // Return an empty array if the race object is undefined or doesn't have the required properties\n    }\n    const participants = race.participants;\n\n    // Build an array of segment names\n    const segmentNames = race.segments.map((segment) => ({\n      name: segment,\n    }));\n\n    // Add each participant's segment times to the array of segment names\n    participants.forEach((participant) => {\n      if (participant.segments) {\n        participant.segments.forEach((segment, index) => {\n          const segmentName = segmentNames[index].name;\n          segmentNames[index][participant.userName] = segment.segmentTime;\n        });\n      }\n    });\n\n    // Calculate each participant's total time and seconds off leader\n    const leaderboard = participants.map((participant) => {\n      const totalTime = participant.segments\n        ? participant.segments.reduce((acc, segment) => {\n            return acc + segment.segmentTime;\n          }, 0)\n        : 0;\n\n      const secondsOffLeader =\n        totalTime -\n        (participants[0].segments\n          ? participants[0].segments.reduce((acc, segment) => {\n              return acc + segment.segmentTime;\n            }, 0)\n          : 0);\n\n      return {\n        name: participant.userName,\n        totalTime: totalTime,\n        diffToLeader: secondsOffLeader,\n        segments: segmentNames.map((segmentName) => {\n          return {\n            name: segmentName.name,\n            time: segmentName[participant.userName],\n          };\n        }),\n      };\n    });\n\n    // Sort the leaderboard by total time\n    leaderboard.sort((a, b) => {\n      return a.totalTime - b.totalTime;\n    });\n\n    return leaderboard;\n  };\n\n  const fetchRace = async () => {\n    try {\n      const res = await fetch(\"/raceMates/races\");\n      if (!res.ok) {\n        throw new Error(res.statusText);\n      }\n      const data = await res.json();\n      return data;\n    } catch (error) {\n      console.error(\"Failed to fetch races:\", error);\n      return { races: [] };\n    }\n  };\n\n  const planRace = async (race) => {\n    console.log(race);\n    const res = await fetch(`/raceMates/planRace`, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(race),\n    });\n    await res.json();\n    await updateRaces();\n  };\n  const addRace = async (race) => {\n    console.log(race);\n    const res = await fetch(`/raceMates/joinRace`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(race),\n    });\n    await res.json();\n    await updateRaces();\n  };\n  const fetchRide = async (race) => {\n    console.log(race);\n    console.log(race._id);\n    const res = await fetch(\"/raceMates/selectRide\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(race),\n    });\n    const data = await res.json();\n    const displayData = data.rides.map((e) => ({\n      name: e.name,\n      segments: e.matchingSegments,\n      raceId: race._id,\n    }));\n    console.log(displayData);\n    setRides(displayData);\n    setRaceID(race._id);\n  };\n  const selectRide = async (ride) => {\n    console.log(ride);\n    const res = await fetch(\"/raceMates/submitRide\", {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(ride),\n    });\n  };\n\n  return (\n    <div className=\"flex flex-col w-full min-h-screen bg-gray-400 rounded-md\">\n      <div className=\" z-10 py-2 bg-white shadow-md container my-5 mx-auto px-4 sm:px-6 lg:px-8 text-purple-600 dark:text-purple-300 rounded-md\">\n        <Header\n          class=\"rounded-md flex align-end px-10\"\n          buttonTitle=\"Plan a race\"\n          title={\"Welcome to mates race\"}\n          onAdd={() => setshowPlanRace(!showPlanRace)}\n          showAdd={showPlanRace}\n        />\n        {showPlanRace && <PlanRace onAdd={planRace} />}\n      </div>\n      <div className=\"rounded-md z-5 py-5 bg-white shadow-md container mx-auto px-4 sm:px-6 lg:px-8 flex flex-col items-center h-full text-purple-600 dark:text-purple-300 my-2\">\n        <RaceContainer\n          title={\"Your upcoming races\"}\n          buttonTitle={\"Join a race\"}\n          onAdd={() => setshowaddRace(!showaddRace)}\n          showAdd={showaddRace}\n        />\n        {showaddRace && <AddRace onAdd={addRace} />}\n        <div className=\"py-10 w-full\">\n          {races.length > 0 ? (\n            <Tasks\n              races={races}\n              rides={rides}\n              raceID={raceID}\n              fetchRide={fetchRide}\n              selectRide={selectRide}\n              getLeaderboard={(race) => getLeaderboard(race)}\n              userId={userId}\n            />\n          ) : (\n            \"You have no upcoming races\"\n          )}\n        </div>\n        <div id=\"ride-details\"></div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}