{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/chris/Documents/Github/matesRace/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/chris/Documents/Github/matesRace/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/chris/Documents/Github/matesRace/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from\"react\";import Button from\"./Button\";import RideList from\"./RideList\";import{useState,useEffect}from\"react\";import Leaderboard from\"./Leaderboard\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Race=function Race(_ref){var race=_ref.race,rides=_ref.rides,raceID=_ref.raceID,onDelete=_ref.onDelete,getLeaderboard=_ref.getLeaderboard,fetchRide=_ref.fetchRide,selectRide=_ref.selectRide,userId=_ref.userId;var _useState=useState(\"totalTime\"),_useState2=_slicedToArray(_useState,2),sortKey=_useState2[0],setSortKey=_useState2[1];console.log(race.participants);var sortLeaderboard=function sortLeaderboard(leaderboard,key){var filteredLeaderboard=leaderboard.filter(function(participant){if(key.startsWith(\"segment\")){var index=parseInt(key.split(\"-\")[1]);return participant.segments[index].time;}else{return participant[key];}});return filteredLeaderboard.sort(function(a,b){if(key.startsWith(\"segment\")){var index=parseInt(key.split(\"-\")[1]);return a.segments[index].time-b.segments[index].time;}else{return a[key]-b[key];}});};var sortedLeaderboard=sortLeaderboard(getLeaderboard(race),sortKey);var isRideSubmitted=race.participants.some(function(participant){return participant.user===userId&&participant.submittedRide;});var userIsInJoinRequests=race.joinRequests.includes(userId);var approveJoinRequest=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(raceId,userId){var token,response,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:token=localStorage.getItem(\"jwt\");_context.prev=1;_context.next=4;return fetch(\"/raceMates/approveJoin/\".concat(raceId,\"/\").concat(userId),{method:\"PUT\",headers:{Authorization:\"Bearer \".concat(token)}});case 4:response=_context.sent;if(response.ok){_context.next=7;break;}throw new Error(\"Failed to approve join request\");case 7:_context.next=9;return response.json();case 9:data=_context.sent;console.log(data);_context.next=16;break;case 13:_context.prev=13;_context.t0=_context[\"catch\"](1);console.error(_context.t0);case 16:case\"end\":return _context.stop();}},_callee,null,[[1,13]]);}));return function approveJoinRequest(_x,_x2){return _ref2.apply(this,arguments);};}();var ignoreJoinRequest=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(request){var token,updatedJoinRequests,response;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:token=localStorage.getItem(\"jwt\");_context2.prev=1;updatedJoinRequests=race.joinRequests.filter(function(request){return request._id!==userId;});_context2.next=5;return fetch(\"/raceMates/races/\".concat(race._id),{method:\"PATCH\",headers:{\"Content-Type\":\"application/json\",Authorization:\"Bearer \".concat(token)},body:JSON.stringify({joinRequests:updatedJoinRequests})});case 5:response=_context2.sent;if(response.ok){_context2.next=8;break;}throw new Error(\"Failed to ignore the join request\");case 8:// Reload the races to show the updated race\nwindow.location.reload();_context2.next=14;break;case 11:_context2.prev=11;_context2.t0=_context2[\"catch\"](1);console.error(\"Error ignoring join request:\",_context2.t0);case 14:case\"end\":return _context2.stop();}},_callee2,null,[[1,11]]);}));return function ignoreJoinRequest(_x3){return _ref3.apply(this,arguments);};}();return/*#__PURE__*/_jsx(\"div\",{className:\"rounded-md flex align-center m-2 p-5 bg-purple-200\",children:/*#__PURE__*/_jsx(\"div\",{className:\"w-full overflow-x-auto\",children:userIsInJoinRequests?/*#__PURE__*/_jsx(\"p\",{className:\"rounded-md flex align-center m-2 p-5 bg-gray-200\",children:\"Your join request has been sent and must be approved by the race organizer.\"}):/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"p-4\",children:[isRideSubmitted?/*#__PURE__*/_jsxs(\"h3\",{className:\"text-base font-bold text-purple-800\",children:[race.raceName,\" \",/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-700\",children:\"Ride submitted\"})]}):/*#__PURE__*/_jsx(\"h3\",{className:\"text-base font-bold text-purple-800\",children:race.raceName}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-700 dark:text-gray-400\",children:race.segments&&race.segments.map(function(segment,index){return/*#__PURE__*/_jsxs(\"a\",{href:\"https://www.strava.com/segments/\".concat(segment),target:\"_blank\",className:\"text-purple-800\",children:[segment,index!==race.segments.length-1&&\", \"]},segment);})}),race.organiserID==userId?/*#__PURE__*/_jsxs(\"div\",{className:\"rounded-md m-2 p-5 bg-gray-200 text-purple-800\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"mb-2\",children:\"You are the race organiser, share these details with participants:\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{className:\"mb-2\",children:[\"Race ID: \",race._id]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Password: \",race.partPass]})]})]}):\"\",race.organiserID===userId&&race.joinRequests.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"rounded-md flex align-center m-2 p-5 bg-gray-200\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-gray-700\",children:\"Join Requests:\"}),race.joinRequests.map(function(request){return/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-700\",children:request._id}),/*#__PURE__*/_jsx(\"button\",{className:\"text-purple-600\",onClick:function onClick(){return approveJoinRequest(race._id,request._id);},children:\"Approve\"}),/*#__PURE__*/_jsx(\"button\",{className:\"text-base text-purple-800\",onClick:function onClick(){return ignoreJoinRequest(request);},children:\"Ignore\"})]},request._id);})]}),/*#__PURE__*/_jsx(Leaderboard,{race:race,sortKey:sortKey,setSortKey:setSortKey,sortedLeaderboard:sortedLeaderboard}),isRideSubmitted?/*#__PURE__*/_jsx(Button,{color:\"bg-purple-300 text-gray-700 rounded-md p-1\",text:\"Submitted the wrong ride?\",onClick:function onClick(){fetchRide(race);}}):/*#__PURE__*/_jsx(Button,{color:\"bg-purple-300 text-gray-700 rounded-md p-1\",text:\"Upload ride\",onClick:function onClick(){fetchRide(race);}}),(rides===null||rides===void 0?void 0:rides.length)>0&&raceID==race._id&&/*#__PURE__*/_jsx(RideList,{rides:rides,selectRide:selectRide})]})})})});};export default Race;","map":{"version":3,"names":["React","Button","RideList","useState","useEffect","Leaderboard","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Race","_ref","race","rides","raceID","onDelete","getLeaderboard","fetchRide","selectRide","userId","_useState","_useState2","_slicedToArray","sortKey","setSortKey","console","log","participants","sortLeaderboard","leaderboard","key","filteredLeaderboard","filter","participant","startsWith","index","parseInt","split","segments","time","sort","a","b","sortedLeaderboard","isRideSubmitted","some","user","submittedRide","userIsInJoinRequests","joinRequests","includes","approveJoinRequest","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","raceId","token","response","data","wrap","_callee$","_context","prev","next","localStorage","getItem","fetch","concat","method","headers","Authorization","sent","ok","Error","json","t0","error","stop","_x","_x2","apply","arguments","ignoreJoinRequest","_ref3","_callee2","request","updatedJoinRequests","_callee2$","_context2","_id","body","JSON","stringify","window","location","reload","_x3","className","children","raceName","map","segment","href","target","length","organiserID","partPass","onClick","color","text"],"sources":["C:/Users/chris/Documents/Github/matesRace/client/src/components/Task.js"],"sourcesContent":["import React from \"react\";\nimport Button from \"./Button\";\nimport RideList from \"./RideList\";\nimport { useState, useEffect } from \"react\";\nimport Leaderboard from \"./Leaderboard\";\n\nconst Race = ({\n  race,\n  rides,\n  raceID,\n  onDelete,\n  getLeaderboard,\n  fetchRide,\n  selectRide,\n  userId,\n}) => {\n  const [sortKey, setSortKey] = useState(\"totalTime\");\n  console.log(race.participants);\n  const sortLeaderboard = (leaderboard, key) => {\n    const filteredLeaderboard = leaderboard.filter((participant) => {\n      if (key.startsWith(\"segment\")) {\n        const index = parseInt(key.split(\"-\")[1]);\n        return participant.segments[index].time;\n      } else {\n        return participant[key];\n      }\n    });\n\n    return filteredLeaderboard.sort((a, b) => {\n      if (key.startsWith(\"segment\")) {\n        const index = parseInt(key.split(\"-\")[1]);\n        return a.segments[index].time - b.segments[index].time;\n      } else {\n        return a[key] - b[key];\n      }\n    });\n  };\n  const sortedLeaderboard = sortLeaderboard(getLeaderboard(race), sortKey);\n\n  const isRideSubmitted = race.participants.some((participant) => {\n    return participant.user === userId && participant.submittedRide;\n  });\n\n  const userIsInJoinRequests = race.joinRequests.includes(userId);\n\n  const approveJoinRequest = async (raceId, userId) => {\n    const token = localStorage.getItem(\"jwt\");\n    try {\n      const response = await fetch(\n        `/raceMates/approveJoin/${raceId}/${userId}`,\n        {\n          method: \"PUT\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Failed to approve join request\");\n      }\n\n      const data = await response.json();\n      console.log(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const ignoreJoinRequest = async (request) => {\n    const token = localStorage.getItem(\"jwt\");\n    try {\n      const updatedJoinRequests = race.joinRequests.filter(\n        (request) => request._id !== userId\n      );\n\n      const response = await fetch(`/raceMates/races/${race._id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify({ joinRequests: updatedJoinRequests }),\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Failed to ignore the join request\");\n      }\n\n      // Reload the races to show the updated race\n      window.location.reload();\n    } catch (error) {\n      console.error(\"Error ignoring join request:\", error);\n    }\n  };\n\n  return (\n    <div className=\"rounded-md flex align-center m-2 p-5 bg-purple-200\">\n      <div className=\"w-full overflow-x-auto\">\n        {userIsInJoinRequests ? (\n          <p className=\"rounded-md flex align-center m-2 p-5 bg-gray-200\">\n            Your join request has been sent and must be approved by the race\n            organizer.\n          </p>\n        ) : (\n          <>\n            <div className=\"p-4\">\n              {isRideSubmitted ? (\n                <h3 className=\"text-base font-bold text-purple-800\">\n                  {race.raceName}{\" \"}\n                  <p className=\"text-gray-700\">Ride submitted</p>\n                </h3>\n              ) : (\n                <h3 className=\"text-base font-bold text-purple-800\">\n                  {race.raceName}\n                </h3>\n              )}\n              <p className=\"text-gray-700 dark:text-gray-400\">\n                {race.segments &&\n                  race.segments.map((segment, index) => (\n                    <a\n                      key={segment}\n                      href={`https://www.strava.com/segments/${segment}`}\n                      target=\"_blank\"\n                      className=\"text-purple-800\"\n                    >\n                      {segment}\n                      {index !== race.segments.length - 1 && \", \"}\n                    </a>\n                  ))}\n              </p>\n\n              {race.organiserID == userId ? (\n                <div className=\"rounded-md m-2 p-5 bg-gray-200 text-purple-800\">\n                  <h4 className=\"mb-2\">\n                    You are the race organiser, share these details with\n                    participants:\n                  </h4>\n                  <div>\n                    <p className=\"mb-2\">Race ID: {race._id}</p>\n                    <p>Password: {race.partPass}</p>\n                  </div>\n                </div>\n              ) : (\n                \"\"\n              )}\n\n              {race.organiserID === userId && race.joinRequests.length > 0 && (\n                <div className=\"rounded-md flex align-center m-2 p-5 bg-gray-200\">\n                  <h4 className=\"text-gray-700\">Join Requests:</h4>\n                  {race.joinRequests.map((request) => (\n                    <div\n                      key={request._id}\n                      className=\"flex items-center space-x-2\"\n                    >\n                      <span className=\"text-gray-700\">{request._id}</span>\n                      <button\n                        className=\"text-purple-600\"\n                        onClick={() =>\n                          approveJoinRequest(race._id, request._id)\n                        }\n                      >\n                        Approve\n                      </button>\n                      <button\n                        className=\"text-base text-purple-800\"\n                        onClick={() => ignoreJoinRequest(request)}\n                      >\n                        Ignore\n                      </button>\n                    </div>\n                  ))}\n                </div>\n              )}\n\n              <Leaderboard\n                race={race}\n                sortKey={sortKey}\n                setSortKey={setSortKey}\n                sortedLeaderboard={sortedLeaderboard}\n              />\n\n              {isRideSubmitted ? (\n                <Button\n                  color=\"bg-purple-300 text-gray-700 rounded-md p-1\"\n                  text=\"Submitted the wrong ride?\"\n                  onClick={() => {\n                    fetchRide(race);\n                  }}\n                />\n              ) : (\n                <Button\n                  color=\"bg-purple-300 text-gray-700 rounded-md p-1\"\n                  text=\"Upload ride\"\n                  onClick={() => {\n                    fetchRide(race);\n                  }}\n                />\n              )}\n\n              {rides?.length > 0 && raceID == race._id && (\n                <RideList rides={rides} selectRide={selectRide} />\n              )}\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Race;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}